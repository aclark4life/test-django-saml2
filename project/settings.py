"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+e(z=v(w=5g4g68u0_+-g&q42chjlhs*ym#)+n%aq#4s^7sov$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'idptest.saml2idp',
    'idptest',
]

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

# SAML

# SAML2IDP metadata settings
# SAML2IDP_CONFIG = {
#     'autosubmit': False,
#     'issuer': 'http://127.0.0.1:8000',
#     'signing': True,
#     'certificate_file': os.path.join(BASE_DIR, 'idptest/keys/sample/sample-certificate.pem'),
#     'private_key_file': os.path.join(BASE_DIR, 'idptest/keys/sample/sample-private-key.pem'),
# }
# 
# demoSpConfig = {
#     'acs_url': 'http://127.0.0.1:9000/sp/acs/',
#     'processor': 'saml2idp.demo.Processor',
#     'links': [ # a list of (resource, pattern) tuples, or a {resource: pattern} dict
#         #NOTE: This should still work, due to the "simple" 'login_init' URL in urls.py:
#         #TEST BY BROWSING TO: http://127.0.0.1:8000/sp/test/
#         ('deeplink', 'http://127.0.0.1:9000/sp/%s/'),
#         # The following are "new" deeplink mappings that let you specify more than one capture group:
#         # This is equivalent to the above, using the 'new' deeplink mapping:
#         #TEST BY BROWSING TO: http://127.0.0.1:8000/sp/test/
#         (r'deeplink/(?P<target>\w+)', 'http://127.0.0.1:9000/sp/%(target)s/'),
#         # Using two capture groups:
#         #TEST BY BROWSING TO: http://127.0.0.1:8000/sp/test/
#         (r'deeplink/(?P<target>\w+)/(?P<page>\w+)', 'http://127.0.0.1:9000/%(target)s/%(page)s/'),
#         # Deeplink to a resource that requires query parameters:
#         #NOTE: In the pattern, always use %(variable)s, because the captured
#         # parameters will always be in unicode.
#         #TEST BY BROWSING TO: http://127.0.0.1:8000/sp/test/123/
#         (r'deeplink/(?P<target>\w+)/(?P<page>\w+)/(?P<param>\d+)',
#             'http://127.0.0.1:9000/%(target)s/%(page)s/?param=%(param)s'),
#     ],
# }
# attrSpConfig = {
#     'acs_url': 'http://127.0.0.1:9000/sp/acs/',
#     'processor': 'saml2idp.demo.AttributeProcessor',
#     'links': {
#         'attr': 'http://127.0.0.1:9000/sp/%s/',
#     },
# }
# SAML2IDP_REMOTES = {
#     # Group of SP CONFIGs.
#     # friendlyname: SP config
#     'attr_demo': attrSpConfig,
#     'demo': demoSpConfig,
# }


ABSORB_LMS_SP_CONFIG = {
#    'acs_url': 'https://aclark.myabsorb.com',
    'acs_url': 'https://aclark.myabsorb.com/account/saml',
    'processor': 'project.app.absorb_lms_sp.Processor',
}

LOGIN_URL='/admin'

SAML2IDP_CONFIG = {
    'autosubmit': False,
    'certificate_file': os.path.join(BASE_DIR, 'project', 'keys', 'certificate.pem'),
    'issuer': 'https://dj-saml-idp.aclark.net',
    'private_key_file': os.path.join(BASE_DIR, 'project', 'keys', 'private-key.pem'),
    'signing': True,
}

SAML2IDP_REMOTES = {
    'absorb': ABSORB_LMS_SP_CONFIG,
}
